name: Main tests

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

env:
  app: "Accpet:application/vnd.github.v3+json"

jobs:
  job1:
    name: job 1
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

#    - name: wait till aux finishes
#      run: sleep 120
#
    - name: cache
      uses: actions/cache@v2
      with:
        path: cf2
        key: test-${{ github.run_id }}
#
#    - name: use cache
#      run: cat cf2

  job2:
    name: job 2
    runs-on: ubuntu-20.04
    outputs:
      current: ${{ steps.check.outputs.current }}

    steps:
    - name: Set flag
      id: check 
      run: echo "::set-output name=current::'no'"

  job3:
    name: job 3
    runs-on: ubuntu-20.04
    outputs:
      cirun: ${{ steps.check.outputs.cirun }}

    steps:
    - name: Set flag
      id: check
      run: echo "::set-output name=cirun::'yes'"

  job4:
    name: job 4
    needs: [job2, job3]
    runs-on: ubuntu-20.04
    if: (needs.job2.outputs.current == 'yes') && (needs.job3.outputs.cirun == 'yes')

    steps:
    - name: say hello
      run: |
        echo ${{ needs.job2.outputs.current }}
        echo ${{ needs.job3.outputs.cirun }}
        echo "Hello, I am in job 4!"


#    - name: generate cache file
#      if: steps.cache-file.outputs.cache-hit != 'true'
#      run: |
#        comment="This is extensive commit message\n\n* item 1;\n* item 2;\n* item 3"
#        printf %s "$comment" > comment_file
#
#    - name: use cache
#      run: cat comment_file
#
#  job2:
#    name: job 2
#    runs-on: ubuntu-20.04
#    needs: job1
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: set file second time
#      run: echo "Hello world 2nd time" > cf
#
#    - name: cache 2
#      id: cache-file-2
#      uses: actions/cache@v2
#      with:
#        path: cf
#        key: 20210411-4
